<%=
<<-TEMPLATE
require 'cuba'

# If you need extra protection.
# require 'cuba/safe'
# Cuba.use plugin Cuba::Safe


# Cuba.use Rack::Session::Cookie, secret: Random.new_seed.to_s

# Cuba includes a plugin called Cuba::Render that provides a couple of helper methods for rendering templates.
# require "cuba/render"
# Cuba.plugin(Cuba::Render)

# This plugin uses Tilt, which serves as an interface to a bunch of different Ruby template engines
# (ERB, Haml, Sass, CoffeeScript, etc.), so you can use the template engine of your choice.

# require 'erb'
# Cuba.settings[:render][:template_engine] = "erb"
# Cuba.settings[:render][:views] = "./views"

# If you need static assets just create the folder public and subfolders /css /imgs /js
# depending on your needs within the project folder then uncomment the ones you created.
# Cuba.use Rack::Static, root: "public", urls: ["/css"]
# Cuba.use Rack::Static, root: "public", urls: ["/imgs"]
# Cuba.use Rack::Static, root: "public", urls: ["/js"]

# To launch just type: 'rackup' in your console
Cuba.define do
# Uncomment if you want to use cuba/safe
# on csrf.unsafe? do
#    csrf.reset!

#   res.status = 403
#   res.write("Not authorized")

#   halt(res.finish)
# end
  on get do

    on root do
      res.write "Hello #{project_name}"
    end
  
  end
end
TEMPLATE
%>
